[{"/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/ApptForm.js":"1","/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Rental.js":"2","/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Appointment.js":"3","/Users/alfredwang/Development/code/Mod4/flat_mountain/src/index.js":"4","/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Pages/Home.js":"5"},{"size":4548,"mtime":1611779155275,"results":"6","hashOfConfig":"7"},{"size":356,"mtime":1611722533008,"results":"8","hashOfConfig":"7"},{"size":1426,"mtime":1611778624643,"results":"9","hashOfConfig":"7"},{"size":271,"mtime":1611429294708,"results":"10","hashOfConfig":"7"},{"size":171,"mtime":1611699144673,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"16uc825",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/ApptForm.js",["23","24"],"import React, { useState, useEffect } from 'react'\nimport Appointment from './Appointment'\n\n\nconst ApptForm = ({\n   rental: rentalList, \n   slope: slopeList,\n}) => {\nconst [name, setName] = useState(\"\")\nconst [date, setDate] = useState(\"\")\nconst [appointments,setAppointments] = useState([])\nconst [selectedRental, setSelectedRental] = useState(\"1\")\nconst [selectedSlope, setSelectedSlope] = useState(\"1\")\n// console.log(typeof rental)\n\n\nuseEffect(()=> {\n   fetch(\"http://localhost:3000/api/v1/appointments\")\n   .then((r)=>r.json())\n   .then((appointments) => \n   setAppointments(appointments))\n},[])\n\n\nconst handleUpdatedAppointment = appt => {\n   const newAppt = [appt, ...appointments]\n   setAppointments(newAppt)\n}\n\n\nconst handleDelete = (id) => {\n   console.log('deleting id', id)\n   // fetch(`http://localhost:3000/api/v1/appointments/${id}`,{\n   //    method: \"DELETE\",\n   //  })\n   Promise.resolve()\n   .then(() => {\n      const remainingAppts = appointments.filter(appt => appt.id !== id);\n      setAppointments(remainingAppts);\n   })\n   }\n\n   const handleUpdatedAppt = updatedAppt => {\n      const updatedMyAppointment = appointments.map((misterAppt) => \n      misterAppt.id === updatedAppt.id ? updatedAppt : misterAppt)\n      setAppointments(updatedMyAppointment)\n   }\n\n\n\nconst appointment = appointments.map((appt) => (\n   <Appointment  key={appt.id} appointment={appt} handleUpdatedAppt={handleUpdatedAppt} handleDelete={handleDelete}/>\n))\n\n\n\nconst handleSubmit = (e) => {\n   e.preventDefault()\n   const formData = {\n      user_id: \"2\", // TODO to update\n      rental_id: selectedRental,\n      slope_id: selectedSlope,\n      date\n      \n      }\n      console.log({formData})\n      //TODO persist\n      fetch(`http://localhost:3000/api/v1/appointments`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n          })\n              .then(response => response.json())\n              .then(handleUpdatedAppointment)\n\n        }\n        \n        const renderSlopeList = () => {\n         //   console.log(slope)\n           return(\n              slopeList.map((slope) => {\n                 return(\n                    <option\n                       key={slope.id}\n                       value={slope.id}\n                       >\n                     {slope.name}\n                    </option>\n                 )\n              })\n           )\n        }\n\n        const renderRentalList = () => {\n        \n           return(\n              \n              rentalList.map(({id, sport}) => {\n               \n                 return(\n                    <option\n                    key={id}\n                    value={id}\n                    >\n                  {sport}\n                    </option>\n                 )\n              }\n              )\n           )\n        }\n\n        const changeRentalHandler = event => {\n         setSelectedRental(event.target.value)    \n         }\n    \n         const changeSlopeHandler = event => {\n               setSelectedSlope(event.target.value)\n         }\n         // console.log(renderSlopeList())\n   \n   return( \n      <section>\n         <form onSubmit={handleSubmit}>\n            <h3> Book a new Appointment</h3>\n            {/* <label> Name</label>\n            <input \n            type=\"text\" \n            id=\"name\" \n            name=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            /> */}\n\n            <label> Gear Rental</label>\n            <select\n            value={selectedRental}\n            onChange={changeRentalHandler}>\n             {renderRentalList()}\n            </select>\n            \n            <label> Select a Slope</label>\n            <select\n            value={selectedSlope}\n            onChange={changeSlopeHandler}>\n             {renderSlopeList()}\n             \n            </select>\n\n            <label> Date and time</label>\n            <input \n            type=\"date\" \n            id=\"name\" \n            name=\"name\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            />\n\n            <input \n            type=\"submit\"\n            name=\"submit\"\n            value=\"Create a New Appt\"\n            className=\"submit\"\n            />\n\n           </form>\n           <p>Your Appointments</p>\n           \n           <div className=\"appointment-container\">\n            {appointment}\n           </div>\n           \n     \n      </section>\n       \n      \n    \n   )\n}\n\nexport default ApptForm","/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Rental.js",[],"/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Appointment.js",[],"/Users/alfredwang/Development/code/Mod4/flat_mountain/src/index.js",[],"/Users/alfredwang/Development/code/Mod4/flat_mountain/src/Components/Pages/Home.js",[],{"ruleId":"25","severity":1,"message":"26","line":9,"column":8,"nodeType":"27","messageId":"28","endLine":9,"endColumn":12},{"ruleId":"25","severity":1,"message":"29","line":9,"column":14,"nodeType":"27","messageId":"28","endLine":9,"endColumn":21},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used."]